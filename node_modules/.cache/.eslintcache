[{"E:\\my-web\\my-web-front\\myreact\\src\\index.js":"1","E:\\my-web\\my-web-front\\myreact\\src\\App.js":"2","E:\\my-web\\my-web-front\\myreact\\src\\reportWebVitals.js":"3","E:\\my-web\\my-web-front\\myreact\\src\\components\\Nav\\Navbar.js":"4","E:\\my-web\\my-web-front\\myreact\\src\\components\\pages\\Home.js":"5","E:\\my-web\\my-web-front\\myreact\\src\\components\\beforeLogin.js":"6","E:\\my-web\\my-web-front\\myreact\\src\\components\\pages\\Profile.js":"7","E:\\my-web\\my-web-front\\myreact\\src\\components\\Login.js":"8","E:\\my-web\\my-web-front\\myreact\\src\\components\\Nav\\NavbarLogined.js":"9","E:\\my-web\\my-web-front\\myreact\\src\\components\\pages\\Todo.js":"10","E:\\my-web\\my-web-front\\myreact\\src\\components\\pages\\Done.js":"11","E:\\my-web\\my-web-front\\myreact\\src\\components\\pages\\Create.js":"12","E:\\my-web\\my-web-front\\myreact\\src\\components\\signIn.js":"13","E:\\my-web\\my-web-front\\myreact\\src\\components\\access.js":"14","E:\\my-web\\my-web-front\\myreact\\src\\components\\pages\\ContactPage.js":"15"},{"size":547,"mtime":1613732799302,"results":"16","hashOfConfig":"17"},{"size":226,"mtime":1617514424799,"results":"18","hashOfConfig":"17"},{"size":362,"mtime":499162500000,"results":"19","hashOfConfig":"17"},{"size":1207,"mtime":1618123746533,"results":"20","hashOfConfig":"17"},{"size":227,"mtime":1613746074964,"results":"21","hashOfConfig":"17"},{"size":1910,"mtime":1618218842506,"results":"22","hashOfConfig":"17"},{"size":1650,"mtime":1618131533615,"results":"23","hashOfConfig":"17"},{"size":7747,"mtime":1618219378667,"results":"24","hashOfConfig":"17"},{"size":2187,"mtime":1618210378491,"results":"25","hashOfConfig":"17"},{"size":10681,"mtime":1618133908246,"results":"26","hashOfConfig":"17"},{"size":10812,"mtime":1618134246336,"results":"27","hashOfConfig":"17"},{"size":1906,"mtime":1618131382849,"results":"28","hashOfConfig":"17"},{"size":10057,"mtime":1618219406734,"results":"29","hashOfConfig":"17"},{"size":1003,"mtime":1618218256449,"results":"30","hashOfConfig":"17"},{"size":1659,"mtime":1618214880199,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1lep09h",{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"34"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"34"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\my-web\\my-web-front\\myreact\\src\\index.js",[],["74","75"],"E:\\my-web\\my-web-front\\myreact\\src\\App.js",["76","77"],"import logo from './logo.svg';\nimport './App.css';\nimport BeforeLogin from \"./components/beforeLogin\"\nimport react from 'react'\n\n\n\n\n\n\nfunction App() {\n  \n  return (\n    <BeforeLogin /> \n    );     \n    \n}\n\nexport default App;\n","E:\\my-web\\my-web-front\\myreact\\src\\reportWebVitals.js",[],"E:\\my-web\\my-web-front\\myreact\\src\\components\\Nav\\Navbar.js",["78","79","80","81","82"],"import React from 'react'\r\nimport {Navbar, Nav, NavItem,Brand,Button,NavDropdown,Form,FormControl} from 'react-bootstrap';\r\n\r\n\r\n\r\nconst NavbarTitle = ()=>{\r\n    return <div>\r\n        <div>\r\n            <Navbar bg=\"light\" variant=\"light\" expand=\"lg\">\r\n               <img href=\"/\" src=\"logo/512.png\" height=\"45\" width=\"45\"  className=\"mr-sm-2\"></img>\r\n                <Navbar.Brand href=\"/\" style={{fontFamily:\"Nunito\"}} >Todo na</Navbar.Brand>\r\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                    <Nav className=\"mr-auto\">\r\n                        <Nav.Link href=\"/contact\" className=\"mr-sm-2\">Contact</Nav.Link> \r\n                    </Nav>\r\n                    <Form inline >\r\n                        <Button href=\"/signIn\" variant=\"info\" className=\"mr-sm-2\" style={{fontFamily:\"Nunito\"}} >Sign in</Button>{' '}\r\n                        <Button href=\"/\" variant=\"outline-info\" className=\"mr-sm-2\" style={{fontFamily:\"Nunito\"}} >Login</Button>\r\n                    </Form>\r\n                   \r\n                </Navbar.Collapse>\r\n            </Navbar>\r\n        </div>\r\n    </div>;\r\n}\r\nexport default NavbarTitle;","E:\\my-web\\my-web-front\\myreact\\src\\components\\pages\\Home.js",["83","84","85","86","87","88","89","90"],"import React from 'react'\r\nimport {Navbar, Nav, NavItem,Brand,Button,NavDropdown,Form,FormControl} from 'react-bootstrap';\r\n\r\n\r\n\r\nconst Home = ()=>{\r\n    return <div>\r\n        <h1>Home</h1>\r\n    </div>;\r\n}\r\nexport default Home;",["91","92"],"E:\\my-web\\my-web-front\\myreact\\src\\components\\beforeLogin.js",["93","94","95"],"import React from 'react'\r\nimport Login from  \"./Login\"\r\nimport { BrowserRouter as Router, Route,Switch} from \"react-router-dom\";\r\nimport {  useState } from 'react';\r\nimport axios from 'axios'\r\nimport Access from \"./access\"\r\nimport Contact from \"./pages/ContactPage\"\r\nimport SignIn from \"./signIn\"\r\nimport Navbar from \"./Nav/Navbar\"\r\n\r\n\r\n\r\nconst BeforeLogin = ()=>{\r\n    \r\n  const [Session,setSession] = useState({\r\n    isLoggedin : false ,\r\n  });\r\n\r\n  const TokenLocal = localStorage.getItem(\"token\")\r\n  const isloginedLocal = localStorage.getItem(\"isLogined\");\r\n\r\n  function  Check(){\r\n    if(TokenLocal==null)\r\n    {\r\n      console.log(\"null\")\r\n    }\r\n    else{\r\n      axios\r\n      .post(`http://localhost:1000/api/check?token=${TokenLocal}`)\r\n      .then((res)=>{\r\n         if(res.data==true)\r\n         {\r\n          localStorage.setItem(\"isLogined\",true) \r\n          setSession ({\r\n             isLoggedin : true\r\n           })\r\n         }\r\n         else{\r\n          localStorage.setItem(\"isLogined\",false) \r\n          setSession ({\r\n            isLoggedin : false\r\n          })\r\n         }\r\n      })\r\n    }\r\n\r\n  }\r\n\r\n  React.useEffect(()=>{\r\n    Check();\r\n  }, []);\r\n\r\n  \r\n  return (\r\n    <div>\r\n       \r\n       {\r\n        isloginedLocal ? \r\n        (\r\n          <Access />\r\n        )  \r\n        : \r\n        (\r\n          <div>\r\n            <Navbar/>\r\n            <Router>\r\n                <Switch>\r\n                  <Route exact path=\"/\" component={() =>  <Login setSession={setSession}/>} />\r\n                  <Route path=\"/signIn\" component={() =>  <SignIn setSession={setSession}/>}/>\r\n                  <Route path=\"/contact\" component={() =>  <Contact />}/>\r\n                  <Route  component={() =>   <Login setSession={setSession}/>}/>\r\n                </Switch>\r\n            </Router>\r\n          </div>\r\n          \r\n        )\r\n      }\r\n    </div>\r\n   \r\n  );  \r\n\r\n}\r\nexport default BeforeLogin;","E:\\my-web\\my-web-front\\myreact\\src\\components\\pages\\Profile.js",["96"],"import React from 'react'\r\nimport axios from 'axios'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {faUserCircle} from '@fortawesome/free-solid-svg-icons'\r\nimport \"../style/Profile.css\";\r\n\r\nconst iconUser = <FontAwesomeIcon size=\"10x\" color=\"gray\" icon={faUserCircle} />\r\n\r\n\r\nconst Profile = ()=>{\r\n    const [name,setname] = React.useState([]);\r\n    const [role,setrole] = React.useState([]);\r\n    const TokenLocal = localStorage.getItem(\"token\")\r\n    function  Data(req,res){\r\n        axios\r\n            .get(`http://localhost:1000/api/user?token=${TokenLocal}`)\r\n            .then((res)=>{\r\n                setname(res.data.Name)\r\n                setrole(res.data.role)\r\n            })\r\n    }\r\n    \r\n    React.useEffect(()=>{\r\n        Data();\r\n    }, []);\r\n    \r\n    return <div>\r\n       \r\n       \r\n         <section >\r\n                <div className=\"row\">\r\n\r\n                    <div className=\"col-md-5\">\r\n                    </div>\r\n                    <div align=\"center\" className=\"col-md-3 mt-md-5\">\r\n                        <div className=\"Modal\">\r\n                            <div>\r\n                                {iconUser}\r\n                            </div>\r\n                            <h1 className=\"mb-md-4\" style={{fontFamily:\"Nunito\"}}>Profile</h1>\r\n                            <h4 style={{fontFamily:\"Nunito\"}}>NAME : {name}</h4>\r\n                            <h4 style={{fontFamily:\"Nunito\"}}>Role : {role}</h4>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                </div>\r\n\r\n         </section>\r\n            \r\n      \r\n       \r\n    </div>;\r\n    \r\n}\r\nexport default Profile;","E:\\my-web\\my-web-front\\myreact\\src\\components\\Login.js",["97","98","99","100"],"import React from 'react'\r\nimport axios from 'axios'\r\nimport {Button} from 'react-bootstrap';\r\nimport \"./style/Login.css\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {faUserCircle,faUnlock,faAddressBook,faSignInAlt,faNewspaper} from '@fortawesome/free-solid-svg-icons'\r\n\r\n\r\n\r\nconst iconID = <FontAwesomeIcon size=\"1x\" color=\"gray\" icon={faUserCircle} />\r\nconst iconPass = <FontAwesomeIcon size=\"1x\" color=\"gray\" icon={faUnlock} />\r\nconst iconAccount = <FontAwesomeIcon size=\"5x\" color=\"white\" icon={faAddressBook} />\r\nconst iconLogin = <FontAwesomeIcon size=\"5x\" color=\"white\" icon={faSignInAlt} />\r\nconst iconTodona = <FontAwesomeIcon size=\"5x\" color=\"white\" icon={faNewspaper} />\r\n\r\nconst Login = ({setSession})=>{\r\n   \r\n    const [createInputUser,setcreatInputUser] = React.useState(\"\");\r\n    const [createInputPassword,setcreatInputPassword] = React.useState(\"\");\r\n    const [userNotifications,setUserNotifications]=React.useState(false);\r\n    const [passwordNotifications,setPasswordNotifications]=React.useState(false);\r\n    \r\n    function  logIn(){\r\n        axios\r\n            .post(\"http://localhost:1000/api/\",{\r\n                UserID: createInputUser,\r\n                Password: createInputPassword,\r\n            }).then((res)=>{\r\n                if(res.data==\"Password incorret\")\r\n                {\r\n                   setPasswordNotifications(true);\r\n                }\r\n                else if(res.data==\"User incorret\")\r\n                {\r\n                    setUserNotifications(true);\r\n                }\r\n                else{\r\n                    console.log(res.data)\r\n                    localStorage.setItem(\"token\",res.data)\r\n                    localStorage.setItem(\"isLogined\",true) \r\n                    setSession({\r\n                        isLoggedin :true \r\n                    });\r\n                }\r\n               \r\n            })\r\n    }\r\n\r\n    \r\n    return <div>\r\n \r\n            <section className=\"Wave-gradient\">\r\n                <div className=\"row\">\r\n\r\n                    <div  className=\"col-md-8\">\r\n                        <br></br><br></br><br></br><br></br>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-4\">\r\n\r\n                            </div>\r\n                            <div className=\"col-md-8\">\r\n                                <div className=\"Card-1 white\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-3\">\r\n                                            {iconAccount}\r\n                                        </div>\r\n                                        <div className=\"col-md-9\">\r\n                                            <h5 className=\"mt-md-2\">Have an account</h5>\r\n                                            <h7>you can click sign in to create account.</h7>\r\n                                        </div>\r\n                                       \r\n                                        \r\n                                    </div>\r\n                                    <br></br><br></br><br></br><br></br>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-3\">\r\n                                            {iconLogin}\r\n                                        </div>\r\n                                        <div className=\"col-md-9\">\r\n                                            <h5 className=\"mt-md-1\">Login</h5>\r\n                                            <h7>( If you already have an account ) you can click Login to visit the website.</h7>\r\n                                        </div>\r\n                                       \r\n                                        \r\n                                    </div>\r\n                                    <br></br><br></br><br></br><br></br>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-3\">\r\n                                            {iconTodona}\r\n                                        </div>\r\n                                        <div className=\"col-md-9\">\r\n                                            <h5 className=\"mt-md-1\">Todo na</h5>\r\n                                            <h7>On this website you can take notes of your event schedule.</h7>\r\n                                        </div>\r\n                                       \r\n                                        \r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-md-4\">\r\n\r\n                        <br></br><br></br><br></br><br></br>\r\n                        <center>\r\n                        <div className=\"Modal\">\r\n                            <h1 style={{fontFamily:\"Nunito\"}} >Login</h1>\r\n                            <br></br>\r\n                            <h6  align = 'left'>User ID :</h6>\r\n                            <div className=\"input-group flex-nowrap\">\r\n                                <span className=\"input-group-text\" id=\"addon-wrapping\">{iconID}</span>\r\n                                <input type=\"User\" className=\"form-control\"   placeholder=\"Enter User\" value={createInputUser} onChange={(e) => {\r\n\r\n                                    setcreatInputUser(e.target.value);\r\n                                }} />\r\n                            </div>\r\n                            {\r\n                            userNotifications ? \r\n                            (\r\n                                <h7><div className=\"red\">The user you entered is incorret</div></h7>\r\n                            )  \r\n                            : \r\n                            (\r\n                                <h1></h1>\r\n                            )\r\n                            }\r\n                            <br></br>\r\n                            <h6  align = 'left'>Password :</h6>\r\n                            <div className=\"input-group flex-nowrap\">\r\n                                <span className=\"input-group-text\" id=\"addon-wrapping\">{iconPass}</span>\r\n                                <input type=\"Password\" className=\"form-control\"  aria-describedby=\"passwordHelp\" placeholder=\"Enter Password\" value={createInputPassword} onChange={(e) => {\r\n\r\n                                    setcreatInputPassword(e.target.value);\r\n                                }} />\r\n                            </div>\r\n                            {\r\n                            passwordNotifications ? \r\n                            (\r\n                                <h7><div className=\"red\">The password you entered is incorret</div></h7>\r\n                            )  \r\n                            : \r\n                            (\r\n                                <h1></h1>\r\n                            )\r\n                            }\r\n                            <br></br><br></br>\r\n\r\n                            <center>\r\n                                <Button variant=\"outline-info\" className=\"mr-sm-2\" style={{ fontFamily: \"Nunito\" }} onClick={() => {\r\n                                    logIn()\r\n                                    setPasswordNotifications(false);\r\n                                    setUserNotifications(false);\r\n                                }}>Login</Button>\r\n                            </center>\r\n                        </div>\r\n                        </center>            \r\n                    </div>\r\n\r\n\r\n                </div>\r\n\r\n\r\n            </section>\r\n        \r\n        \r\n        \r\n        \r\n    </div>;\r\n    \r\n   \r\n}\r\nexport default Login;","E:\\my-web\\my-web-front\\myreact\\src\\components\\Nav\\NavbarLogined.js",["101","102","103","104","105"],"import React from 'react'\r\nimport {Navbar, Nav, NavItem,Brand,Button,NavDropdown,Form,FormControl,Badge} from 'react-bootstrap';\r\nimport axios from 'axios'\r\n\r\nconst NavbarLogin = ()=>{\r\n    const [name,setname] = React.useState([]);\r\n    const TokenLocal = localStorage.getItem(\"token\")\r\n    function  getName(){\r\n        axios\r\n            .get(`http://localhost:1000/api/user?token=${TokenLocal}`)\r\n            .then((res)=>{\r\n                setname(res.data.Name)\r\n            })\r\n    }\r\n    React.useEffect(()=>{\r\n        getName();\r\n    }, []);\r\n    \r\n    return <div>\r\n        <div>\r\n        <Navbar bg=\"light\" variant=\"light\" expand=\"lg\">\r\n                <img href=\"/\" src=\"logo/512.png\" height=\"45\" width=\"45\"  className=\"mr-sm-2\"></img>\r\n                <Navbar.Brand href=\"/todo\" style={{fontFamily:\"Nunito\"}} className=\"mr-sm-3\"  >Todo na</Navbar.Brand>\r\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                    <Nav className=\"mr-auto\">\r\n                        <Nav.Link href=\"/todo\" className=\"mr-sm-2\">Todo</Nav.Link>\r\n                        <Nav.Link href=\"/done\" className=\"mr-sm-2\">Done</Nav.Link>\r\n                        <Nav.Link href=\"/create\" className=\"mr-sm-2\">Create</Nav.Link>\r\n                        <NavDropdown title=\"More\" id=\"basic-nav-dropdown\" className=\"mr-sm-2\">\r\n                            <NavDropdown.Item href=\"/profile\">Profile</NavDropdown.Item>\r\n                            <NavDropdown.Divider />\r\n                            <NavDropdown.Item href=\"/contact\">Contact</NavDropdown.Item>\r\n                        </NavDropdown>\r\n                    </Nav>\r\n                    <h4><Badge className=\"mr-md-2 mt-md-2\" pill variant=\"dark\">{name}</Badge></h4>\r\n                    <Form inline >\r\n                        <Button href=\"/\" variant=\"outline-info\" className=\"mr-sm-2\" style={{fontFamily:\"Nunito\"}} onClick={()=>localStorage.clear()} >Logout</Button> \r\n                    </Form>\r\n                    \r\n                   \r\n                </Navbar.Collapse>\r\n            </Navbar>\r\n        </div>\r\n    </div>;\r\n}\r\nexport default NavbarLogin;","E:\\my-web\\my-web-front\\myreact\\src\\components\\pages\\Todo.js",["106","107","108"],"import React from 'react'\r\nimport axios from 'axios'\r\nimport \"../style/Todo.css\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faCheckCircle,faTrash,faPencilAlt,faCheckSquare,faTimes,faFile} from '@fortawesome/free-solid-svg-icons'\r\n\r\n\r\nconst iconCheck = <FontAwesomeIcon size=\"2x\" color=\"green\" icon={faCheckCircle} />\r\nconst iconTrash = <FontAwesomeIcon size=\"2x\" color=\"grey\" icon={faTrash} />\r\nconst iconEdit = <FontAwesomeIcon size=\"2x\" color=\"orange\" icon={faPencilAlt} />\r\nconst iconSave = <FontAwesomeIcon size=\"3x\" color=\"green\" icon={faCheckSquare} />\r\nconst iconCancel = <FontAwesomeIcon size=\"3x\" color=\"red\" icon={faTimes} />\r\nconst iconTask = <FontAwesomeIcon size=\"7x\" color=\"grey\" icon={faFile} />\r\n\r\nconst Todo = ()=>{\r\n    const [todo,setTodo] = React.useState([]);\r\n    const TokenLocal = localStorage.getItem(\"token\")\r\n    \r\n    const [empty,setEmpty]= React.useState(false);\r\n\r\n    const [edit, setEdit] = React.useState(false);\r\n    \r\n    const [editData,setEditData] = React.useState({\r\n        ID:\"\",\r\n        Name : \"\" ,\r\n        Time : \"\"\r\n    });\r\n    \r\n    React.useEffect(()=>{\r\n        fetchTodoTask(); \r\n    }, []);\r\n\r\n    function  fetchTodoTask(){\r\n        axios\r\n            .get(`http://localhost:1000/api/task?token=${TokenLocal}&isFinished=false`)\r\n            .then((res)=>{\r\n                if(res.data==\"\")\r\n                {\r\n                    setEmpty(true)\r\n                }\r\n                setTodo(res.data)\r\n                \r\n            });\r\n    }\r\n\r\n\r\n    function  onUpdate(id,isFinished){\r\n        axios.put(`http://localhost:1000/api/task?token=${TokenLocal}&id=${id}`,{\r\n            isFinished : isFinished,\r\n        }).then(()=>{\r\n            fetchTodoTask(); \r\n        })\r\n    }\r\n\r\n    function  onUpdateData(id,Name,Time){\r\n        axios.put(`http://localhost:1000/api/task?token=${TokenLocal}&id=${id}`,{\r\n            taskName : Name,\r\n            time : Time\r\n        }).then(()=>{\r\n            \r\n            fetchTodoTask();\r\n        })\r\n    }\r\n\r\n    function onDelete(id){\r\n        axios.delete(`http://localhost:1000/api/task?token=${TokenLocal}&id=${id}`)\r\n        .then(()=>{\r\n            fetchTodoTask(); \r\n        });\r\n    }\r\n    \r\n    return<div>\r\n       \r\n        <div>\r\n\r\n\r\n            \r\n            <ul className=\"mt-lg-5\">\r\n\r\n                \r\n                {\r\n                    edit ?\r\n                        (\r\n                            <div>\r\n                                <center>\r\n\r\n                                    <h1 className=\"mb-md-5\" style={{fontFamily:\"Nunito\"}}  >Edit</h1>\r\n\r\n                                </center>\r\n\r\n                                <center>\r\n                                    <div className=\"col-md-6\">\r\n                                        <div className=\"Card mb-sm-2\" >\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-md-6\">\r\n                                                    <div className=\"row\">\r\n                                                        <input type=\"User\" className=\"form-control\" placeholder=\"Enter User\" value={editData.Name} onChange={(e) => {\r\n                                                            setEditData({\r\n                                                                ID: editData.ID,\r\n                                                                Name: e.target.value,\r\n                                                                Time: editData.Time\r\n                                                            });\r\n                                                        }} />\r\n                                                    </div>\r\n                                                    <div className=\"row\">\r\n                                                        <input className=\"form-control\" value={editData.Time} type=\"time\" onChange={(e) => {\r\n                                                            setEditData({\r\n                                                                ID: editData.ID,\r\n                                                                Name: editData.Name,\r\n                                                                Time: e.target.value\r\n                                                            });\r\n                                                        }} />\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"col-sm-6\">\r\n                                                    <div className=\"row\">\r\n                                                        <div className=\"col-sm-6\" >\r\n\r\n                                                        </div>\r\n                                                        <div className=\"col-sm-2 mr-md-2 ml-md-2\" >\r\n                                                            <div align=\"right\" className=\"buttonGrey\"  onClick={() => {\r\n                                                                onUpdateData(editData.ID, editData.Name, editData.Time)\r\n                                                                setEdit(false)\r\n                                                            }}>{iconSave}</div>\r\n                                                        </div>\r\n                                                        <div className=\"col-sm-2 mr-md-2 ml-md-2\" >\r\n                                                            <div align=\"right\" className=\"buttonGrey\" onClick={() => setEdit(false)}>{iconCancel}</div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n\r\n                                            </div>\r\n\r\n\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                </center>\r\n                            </div>\r\n                        )\r\n                        :\r\n                        (\r\n                            <div>\r\n                                <center>\r\n\r\n                                    <h1 className=\"mb-md-5\" style={{fontFamily:\"Nunito\"}}  >Todo</h1>\r\n                                    {\r\n                                        empty ?\r\n                                            (\r\n                                                <div>\r\n                                                    {iconTask}\r\n                                                    <h4 className=\"mt-md-5\">All tasks completed!</h4>\r\n                                                    <h6 style={{color: \"grey\",}}>You can create new tasks</h6>\r\n                                                    \r\n                                                </div>\r\n                                                \r\n                                                \r\n                                            )\r\n                                            :\r\n                                            (\r\n                                                <h1></h1>\r\n                                            )\r\n                                    }\r\n\r\n\r\n                                </center>\r\n\r\n                                {todo.map((task) => (\r\n                                    <center>\r\n                                        <div className=\"col-md-6\">\r\n                                            <div className=\"Card mb-sm-2\" >\r\n                                                <div className=\"row\">\r\n                                                    <div className=\"col-md-6\">\r\n                                                        <div className=\"row\">\r\n                                                            <span style={{ fontFamily: \"Prompt\" }} >{task.taskName} </span>\r\n                                                        </div>\r\n                                                        <div className=\"row\">\r\n                                                            <span style={{ fontFamily: \"Prompt\" }} >{task.time} </span>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"col-sm-6\">\r\n                                                        <div className=\"row\">\r\n                                                            <div className=\"col-sm-6\" >\r\n\r\n                                                            </div>\r\n                                                            <div className=\"col-sm-2\" >\r\n                                                                <div align=\"right\" className=\"buttonGrey\" onClick={() => onUpdate(task._id, true)}> {iconCheck}</div>\r\n                                                            </div>\r\n                                                            <div className=\"col-sm-2\" >\r\n                                                                <div align=\"right\" className=\"buttonGrey\" onClick={() => {\r\n                                                                    setEdit(true);\r\n                                                                    setEditData({\r\n                                                                        ID: task._id,\r\n                                                                        Name: task.taskName,\r\n                                                                        Time: task.time\r\n                                                                    });\r\n\r\n                                                                }}> {iconEdit}</div>\r\n                                                            </div>\r\n                                                            <div className=\"col-sm-2\" >\r\n                                                                <div align=\"right\" className=\"buttonGrey\" onClick={() => onDelete(task._id)}>{iconTrash}</div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </center>\r\n\r\n                                ))}\r\n                            </div>\r\n                        )\r\n                }\r\n            </ul>\r\n        </div>\r\n    </div>;\r\n}\r\nexport default Todo;","E:\\my-web\\my-web-front\\myreact\\src\\components\\pages\\Done.js",["109","110","111"],"import React from 'react'\r\nimport axios from 'axios'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {faTimesCircle,faTrash,faPencilAlt,faCheckSquare,faTimes,faFile} from '@fortawesome/free-solid-svg-icons'\r\n\r\n\r\n\r\nconst iconClose = <FontAwesomeIcon size=\"2x\" color=\"red\" icon={faTimesCircle} />\r\nconst iconTrash = <FontAwesomeIcon size=\"2x\" color=\"grey\" icon={faTrash} />\r\nconst iconEdit = <FontAwesomeIcon size=\"2x\" color=\"orange\" icon={faPencilAlt} />\r\nconst iconSave = <FontAwesomeIcon size=\"3x\" color=\"green\" icon={faCheckSquare} />\r\nconst iconCancel = <FontAwesomeIcon size=\"3x\" color=\"red\" icon={faTimes} />\r\nconst iconTask = <FontAwesomeIcon size=\"7x\" color=\"grey\" icon={faFile} />\r\n\r\n\r\n\r\nconst Done = ()=>{\r\n   \r\n    const [done, setDone] = React.useState([]);\r\n    const [edit, setEdit] = React.useState(false);\r\n\r\n    const [empty,setEmpty]= React.useState(false);\r\n    \r\n    const [editData,setEditData] = React.useState({\r\n        ID:\"\",\r\n        Name : \"\" ,\r\n        Time : \"\"\r\n    });\r\n    \r\n    const TokenLocal = localStorage.getItem(\"token\")\r\n\r\n    \r\n    React.useEffect(()=>{  \r\n        fetchDoneTask();\r\n    }, []);\r\n\r\n\r\n    function  fetchDoneTask(){\r\n        axios\r\n            .get(`http://localhost:1000/api/task?token=${TokenLocal}&isFinished=true`)\r\n            .then((res)=>{\r\n                if(res.data==\"\")\r\n                {\r\n                    setEmpty(true)\r\n                }\r\n                setDone(res.data)\r\n                \r\n            });\r\n    }\r\n\r\n    function  onUpdate(id,isFinished){\r\n        axios.put(`http://localhost:1000/api/task?token=${TokenLocal}&id=${id}`,{\r\n            isFinished : isFinished,\r\n        }).then(()=>{\r\n            \r\n            fetchDoneTask();\r\n        })\r\n    }\r\n\r\n    function  onUpdateData(id,Name,Time){\r\n        axios.put(`http://localhost:1000/api/task?token=${TokenLocal}&id=${id}`,{\r\n            taskName : Name,\r\n            time : Time\r\n        }).then(()=>{\r\n            \r\n            fetchDoneTask();\r\n        })\r\n    }\r\n\r\n\r\n    function onDelete(id){\r\n        axios.delete(`http://localhost:1000/api/task?token=${TokenLocal}&id=${id}`)\r\n        .then(()=>{ \r\n            fetchDoneTask();\r\n        });\r\n    }\r\n    \r\n    \r\n   \r\n\r\n    \r\n    return<div>\r\n        <div>\r\n            \r\n            <ul className=\"mt-lg-5\">\r\n                \r\n            {\r\n             edit ? \r\n            (\r\n                            <div>\r\n                                \r\n                                <center>\r\n\r\n                                    <h1 className=\"mb-md-5\" style={{fontFamily:\"Nunito\"}}  >Edit</h1>\r\n\r\n                                </center>\r\n                                <center>\r\n                                    <div className=\"col-md-6\">\r\n                                        <div className=\"Card mb-sm-2\" >\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-md-6\">\r\n                                                    <div className=\"row\">\r\n                                                        <input type=\"User\" className=\"form-control\" placeholder=\"Enter User\" value={editData.Name} onChange={(e) => {\r\n                                                            setEditData ({\r\n                                                                ID : editData.ID,\r\n                                                                Name : e.target.value,\r\n                                                                Time : editData.Time\r\n                                                            });\r\n                                                        }} />\r\n                                                    </div>\r\n                                                    <div className=\"row\">\r\n                                                        <input className=\"form-control\" value={editData.Time} type=\"time\" onChange={(e) => {\r\n                                                            setEditData ({\r\n                                                                ID : editData.ID,\r\n                                                                Name : editData.Name,\r\n                                                                Time : e.target.value\r\n                                                            });\r\n                                                        }} />\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"col-sm-6\">\r\n                                                    <div className=\"row\">\r\n                                                        <div className=\"col-sm-6\" >\r\n\r\n                                                        </div>\r\n                                                        <div className=\"col-sm-2  mr-md-2 ml-md-2\" >\r\n                                                            <div align=\"right\" className=\"buttonGrey\" onClick={() =>{\r\n                                                                onUpdateData(editData.ID,editData.Name,editData.Time)\r\n                                                                setEdit(false)\r\n                                                            }}>{iconSave}</div>\r\n                                                        </div>\r\n                                                        <div className=\"col-sm-2  mr-md-2 ml-md-2\" >\r\n                                                            <div align=\"right\" className=\"buttonGrey\" onClick={() => setEdit(false)}>{iconCancel}</div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n\r\n                                            </div>\r\n\r\n\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                </center>\r\n                            </div>\r\n                        )\r\n                        :\r\n                        (\r\n\r\n                            <div>\r\n\r\n                                <center>\r\n\r\n                                    <h1 className=\"mb-md-5\" style={{fontFamily:\"Nunito\"}}  >Done</h1>\r\n                                    {\r\n                                        empty ?\r\n                                            (\r\n                                                <div>\r\n                                                    {iconTask}\r\n                                                    <h4 className=\"mt-md-5\">All tasks clear!</h4>\r\n                                                    <h6 style={{color: \"grey\",}}>You can create new tasks</h6>\r\n                                                    \r\n                                                </div>\r\n                                                \r\n                                                \r\n                                            )\r\n                                            :\r\n                                            (\r\n                                                <h1></h1>\r\n                                            )\r\n                                    }\r\n\r\n                                </center>\r\n\r\n\r\n                                {done.map((task) => (\r\n                                    <center>\r\n                                        <div className=\"col-md-6\">\r\n                                            <div className=\"Card mb-sm-2\" >\r\n                                                <div className=\"row\">\r\n                                                    <div className=\"col-md-6\">\r\n                                                        <div className=\"row\">\r\n                                                            <span style={{ fontFamily: \"Prompt\" }} >{task.taskName} </span>\r\n                                                        </div>\r\n                                                        <div className=\"row\">\r\n                                                            <span style={{ fontFamily: \"Prompt\" }} >{task.time} </span>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"col-sm-6\">\r\n                                                        <div className=\"row\">\r\n                                                            <div className=\"col-sm-6\" >\r\n\r\n                                                            </div>\r\n                                                            <div className=\"col-sm-2\" >\r\n                                                                <div align=\"right\" className=\"buttonGrey\" onClick={() => onUpdate(task._id, false)}> {iconClose}</div>\r\n                                                            </div>\r\n                                                            <div className=\"col-sm-2\" >\r\n                                                                <div align=\"right\" className=\"buttonGrey\" onClick={() => {\r\n\r\n                                                                    setEdit(true);\r\n                                                                    setEditData ({\r\n                                                                        ID : task._id,\r\n                                                                        Name : task.taskName,\r\n                                                                        Time : task.time\r\n                                                                    });\r\n                                                                    \r\n                                                                }}> {iconEdit}</div>\r\n                                                            </div>\r\n                                                            <div className=\"col-sm-2\" >\r\n                                                                <div align=\"right\" className=\"buttonGrey\" onClick={() => onDelete(task._id)}>{iconTrash}</div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n\r\n                                                </div>\r\n\r\n\r\n\r\n                                            </div>\r\n                                        </div>\r\n                                    </center>\r\n\r\n                                ))}\r\n                            </div>\r\n            )\r\n            }\r\n\r\n               \r\n                \r\n            </ul>\r\n          \r\n        </div>\r\n    </div>;\r\n}\r\nexport default Done;","E:\\my-web\\my-web-front\\myreact\\src\\components\\pages\\Create.js",[],"E:\\my-web\\my-web-front\\myreact\\src\\components\\signIn.js",["112","113","114","115","116","117","118","119","120","121"],"import React from 'react'\r\nimport axios from 'axios'\r\nimport {Button} from 'react-bootstrap';\r\nimport \"./style/signIn.css\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {faAddressBook,faSignInAlt,faNewspaper} from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst iconAccount = <FontAwesomeIcon size=\"5x\" color=\"white\" icon={faAddressBook} />\r\nconst iconLogin = <FontAwesomeIcon size=\"5x\" color=\"white\" icon={faSignInAlt} />\r\nconst iconTodona = <FontAwesomeIcon size=\"5x\" color=\"white\" icon={faNewspaper} />\r\n\r\n\r\nconst SignIn = ({setSession})=>{\r\n   \r\n    const [createInputName,setcreatInputName] = React.useState(\"\");\r\n    const [createInputUser,setcreatInputUser] = React.useState(\"\");\r\n    const [createInputPassword,setcreatInputPassword] = React.useState(\"\");\r\n    const [comfirmInputPassword,setComfirmInputPassword] = React.useState(\"\");\r\n    const [UserSame,setUserSame] = React.useState(false);\r\n    const [coparePassword,setCoparePassword] = React.useState(false);\r\n    const [numPasswordNotifications,setNumPasswordNotifications]=React.useState(false);\r\n    const [numUserIDNotifications,setNumUserIDNotifications]=React.useState(false);\r\n    const [numNameNotifications,setNumNameNotifications]=React.useState(false);\r\n    \r\n    \r\n\r\n    function  signin(){\r\n       \r\n        if(createInputPassword==comfirmInputPassword)\r\n        {\r\n            axios\r\n            .post(\"http://localhost:1000/api/signIn\",{\r\n                Name: createInputName,\r\n                UserID: createInputUser,\r\n                Password: createInputPassword,\r\n            }).then((res)=>{\r\n                    \r\n                    console.log(res.data)\r\n\r\n                    if(res.data==\"UserID Same\"){\r\n                        setUserSame(true);\r\n                    }\r\n                    else if(res.data==\"password<6\")\r\n                    {\r\n                        setNumPasswordNotifications(true);\r\n                    }\r\n                    else if(res.data==\"userID<6\")\r\n                    {\r\n                        setNumUserIDNotifications(true);\r\n                    }\r\n                    else if(res.data==\"name<1\")\r\n                    {\r\n                        setNumNameNotifications(true)\r\n                    }\r\n                    else{\r\n                        localStorage.setItem(\"token\",res.data)\r\n                        localStorage.setItem(\"isLogined\",true) \r\n                        setSession({\r\n                            isLoggedin :true \r\n                        });\r\n                    }   \r\n            })\r\n        }\r\n        else{\r\n            setCoparePassword(true);\r\n        }\r\n        \r\n       \r\n    }\r\n\r\n    \r\n    return <div>\r\n            <section className=\"Wave-gradient\">\r\n                <div  className=\"row\">\r\n                    <div className=\"col-md-8\">\r\n                    <br></br><br></br><br></br><br></br>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-4\">\r\n\r\n                            </div>\r\n                            <div className=\"col-md-8\">\r\n                                <div className=\"Card-1 white\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-3\">\r\n                                            {iconAccount}\r\n                                        </div>\r\n                                        <div className=\"col-md-9\">\r\n                                            <h5 className=\"mt-md-2\">Have an account</h5>\r\n                                            <h7>you can click sign in to create account.</h7>\r\n                                        </div>\r\n\r\n\r\n                                    </div>\r\n                                    <br></br><br></br><br></br><br></br>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-3\">\r\n                                            {iconLogin}\r\n                                        </div>\r\n                                        <div className=\"col-md-9\">\r\n                                            <h5 className=\"mt-md-1\">Login</h5>\r\n                                            <h7>( If you already have an account ) you can click Login to visit the website.</h7>\r\n                                        </div>\r\n\r\n\r\n                                    </div>\r\n                                    <br></br><br></br><br></br><br></br>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-3\">\r\n                                            {iconTodona}\r\n                                        </div>\r\n                                        <div className=\"col-md-9\">\r\n                                            <h5 className=\"mt-md-1\">Todo na</h5>\r\n                                            <h7>On this website you can take notes of your event schedule.</h7>\r\n                                        </div>\r\n\r\n\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                \r\n                   \r\n                    <div className=\"col-md-4\">\r\n                        <br></br><br></br><br></br><br></br>\r\n                        <center>\r\n                        <div className=\"Modal\" >\r\n                            <h1 style={{fontFamily:\"Nunito\"}}>Sign in</h1>\r\n                            <br></br>\r\n                            <h6 align = 'left'>Name :</h6>\r\n                            <input type=\"Name\" className=\"form-control\"  aria-describedby=\"emailHelp\" placeholder=\"Enter Name\" value={createInputName} onChange={(e) => {\r\n\r\n                                setcreatInputName(e.target.value);\r\n                            }} />\r\n                            {\r\n                            numNameNotifications ? \r\n                            (\r\n                                <h7><div className=\"red\">Please enter your name</div></h7>\r\n                            )  \r\n                            : \r\n                            (\r\n                                <h1></h1>\r\n                            )\r\n                            }\r\n                            <br></br>\r\n                            <h6 align = 'left'>User ID :</h6>\r\n                            <input type=\"User\" className=\"form-control\"  aria-describedby=\"emailHelp\" placeholder=\"Enter User\" value={createInputUser} onChange={(e) => {\r\n\r\n                                setcreatInputUser(e.target.value);\r\n                            }} />\r\n                            {\r\n                            numUserIDNotifications ? \r\n                            (\r\n                                <h7><div className=\"red\">User must be more than 6 </div></h7>\r\n                            )  \r\n                            : \r\n                            (\r\n                                <h1></h1>\r\n                            )\r\n                            }\r\n                            {\r\n                            UserSame ? \r\n                            (\r\n                                <h7><div className=\"red\">The user has been used</div></h7>\r\n                            )  \r\n                            : \r\n                            (\r\n                                <h1></h1>\r\n                            )\r\n                            }\r\n                            <br></br>\r\n                            <h6 align = 'left'>Password :</h6>\r\n                            <input type=\"Password\" className=\"form-control\"  aria-describedby=\"emailHelp\" placeholder=\"Enter Password\" value={createInputPassword} onChange={(e) => {\r\n\r\n                                setcreatInputPassword(e.target.value);\r\n                            }} />\r\n                            {\r\n                            numPasswordNotifications ? \r\n                            (\r\n                                <h7><div className=\"red\">Passwords must be more than 6 </div></h7>\r\n                            )  \r\n                            : \r\n                            (\r\n                                <h1></h1>\r\n                            )\r\n                            }\r\n                            <br></br>\r\n                            <h6 align = 'left'>Comfirm password :</h6>\r\n                            <input type=\"Password\" className=\"form-control\"  aria-describedby=\"emailHelp\" placeholder=\"Enter Password\" value={comfirmInputPassword} onChange={(e) => {\r\n\r\n                                setComfirmInputPassword(e.target.value);\r\n                            }} />\r\n                            {\r\n                            coparePassword ? \r\n                            (\r\n                                <h7><div className=\"red\">password != comfirm password</div></h7>\r\n                            )  \r\n                            : \r\n                            (\r\n                                <h1></h1>\r\n                            )\r\n                            }\r\n                            <br></br>\r\n                            <Button variant=\"outline-info\" className=\"mr-sm-2\" style={{ fontFamily: \"Nunito\" }} onClick={() => {\r\n                                setCoparePassword(false);\r\n                                setUserSame(false);\r\n                                setNumPasswordNotifications(false);\r\n                                setNumUserIDNotifications(false);\r\n                                setNumNameNotifications(false)\r\n                                signin();\r\n                            }}>Create Account</Button>\r\n\r\n                             \r\n                       </div>\r\n                       </center>   \r\n                    </div>   \r\n                </div>\r\n               \r\n               \r\n                    \r\n                    \r\n                \r\n            </section>\r\n       \r\n\r\n       \r\n             \r\n    </div>;\r\n    \r\n}\r\nexport default SignIn;","E:\\my-web\\my-web-front\\myreact\\src\\components\\access.js",[],"E:\\my-web\\my-web-front\\myreact\\src\\components\\pages\\ContactPage.js",[],{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","severity":1,"message":"127","line":1,"column":8,"nodeType":"128","messageId":"129","endLine":1,"endColumn":12},{"ruleId":"126","severity":1,"message":"130","line":4,"column":8,"nodeType":"128","messageId":"129","endLine":4,"endColumn":13},{"ruleId":"126","severity":1,"message":"131","line":2,"column":22,"nodeType":"128","messageId":"129","endLine":2,"endColumn":29},{"ruleId":"126","severity":1,"message":"132","line":2,"column":30,"nodeType":"128","messageId":"129","endLine":2,"endColumn":35},{"ruleId":"126","severity":1,"message":"133","line":2,"column":43,"nodeType":"128","messageId":"129","endLine":2,"endColumn":54},{"ruleId":"126","severity":1,"message":"134","line":2,"column":60,"nodeType":"128","messageId":"129","endLine":2,"endColumn":71},{"ruleId":"135","severity":1,"message":"136","line":10,"column":16,"nodeType":"137","endLine":10,"endColumn":93},{"ruleId":"126","severity":1,"message":"138","line":2,"column":9,"nodeType":"128","messageId":"129","endLine":2,"endColumn":15},{"ruleId":"126","severity":1,"message":"139","line":2,"column":17,"nodeType":"128","messageId":"129","endLine":2,"endColumn":20},{"ruleId":"126","severity":1,"message":"131","line":2,"column":22,"nodeType":"128","messageId":"129","endLine":2,"endColumn":29},{"ruleId":"126","severity":1,"message":"132","line":2,"column":30,"nodeType":"128","messageId":"129","endLine":2,"endColumn":35},{"ruleId":"126","severity":1,"message":"140","line":2,"column":36,"nodeType":"128","messageId":"129","endLine":2,"endColumn":42},{"ruleId":"126","severity":1,"message":"133","line":2,"column":43,"nodeType":"128","messageId":"129","endLine":2,"endColumn":54},{"ruleId":"126","severity":1,"message":"141","line":2,"column":55,"nodeType":"128","messageId":"129","endLine":2,"endColumn":59},{"ruleId":"126","severity":1,"message":"134","line":2,"column":60,"nodeType":"128","messageId":"129","endLine":2,"endColumn":71},{"ruleId":"122","replacedBy":"142"},{"ruleId":"124","replacedBy":"143"},{"ruleId":"126","severity":1,"message":"144","line":15,"column":10,"nodeType":"128","messageId":"129","endLine":15,"endColumn":17},{"ruleId":"145","severity":1,"message":"146","line":31,"column":21,"nodeType":"147","messageId":"148","endLine":31,"endColumn":23},{"ruleId":"149","severity":1,"message":"150","line":51,"column":6,"nodeType":"151","endLine":51,"endColumn":8,"suggestions":"152"},{"ruleId":"149","severity":1,"message":"153","line":25,"column":8,"nodeType":"151","endLine":25,"endColumn":10,"suggestions":"154"},{"ruleId":"145","severity":1,"message":"146","line":29,"column":28,"nodeType":"147","messageId":"148","endLine":29,"endColumn":30},{"ruleId":"145","severity":1,"message":"146","line":33,"column":33,"nodeType":"147","messageId":"148","endLine":33,"endColumn":35},{"ruleId":"155","severity":1,"message":"156","line":125,"column":33,"nodeType":"137","endLine":125,"endColumn":37},{"ruleId":"155","severity":1,"message":"156","line":144,"column":33,"nodeType":"137","endLine":144,"endColumn":37},{"ruleId":"126","severity":1,"message":"131","line":2,"column":22,"nodeType":"128","messageId":"129","endLine":2,"endColumn":29},{"ruleId":"126","severity":1,"message":"132","line":2,"column":30,"nodeType":"128","messageId":"129","endLine":2,"endColumn":35},{"ruleId":"126","severity":1,"message":"134","line":2,"column":60,"nodeType":"128","messageId":"129","endLine":2,"endColumn":71},{"ruleId":"149","severity":1,"message":"157","line":17,"column":8,"nodeType":"151","endLine":17,"endColumn":10,"suggestions":"158"},{"ruleId":"135","severity":1,"message":"136","line":22,"column":17,"nodeType":"137","endLine":22,"endColumn":94},{"ruleId":"149","severity":1,"message":"159","line":31,"column":8,"nodeType":"151","endLine":31,"endColumn":10,"suggestions":"160"},{"ruleId":"145","severity":1,"message":"146","line":37,"column":28,"nodeType":"147","messageId":"148","endLine":37,"endColumn":30},{"ruleId":"155","severity":1,"message":"156","line":161,"column":49,"nodeType":"137","endLine":161,"endColumn":53},{"ruleId":"149","severity":1,"message":"161","line":35,"column":8,"nodeType":"151","endLine":35,"endColumn":10,"suggestions":"162"},{"ruleId":"145","severity":1,"message":"146","line":42,"column":28,"nodeType":"147","messageId":"148","endLine":42,"endColumn":30},{"ruleId":"155","severity":1,"message":"156","line":169,"column":49,"nodeType":"137","endLine":169,"endColumn":53},{"ruleId":"145","severity":1,"message":"146","line":29,"column":31,"nodeType":"147","messageId":"148","endLine":29,"endColumn":33},{"ruleId":"145","severity":1,"message":"146","line":40,"column":32,"nodeType":"147","messageId":"148","endLine":40,"endColumn":34},{"ruleId":"145","severity":1,"message":"146","line":43,"column":37,"nodeType":"147","messageId":"148","endLine":43,"endColumn":39},{"ruleId":"145","severity":1,"message":"146","line":47,"column":37,"nodeType":"147","messageId":"148","endLine":47,"endColumn":39},{"ruleId":"145","severity":1,"message":"146","line":51,"column":37,"nodeType":"147","messageId":"148","endLine":51,"endColumn":39},{"ruleId":"155","severity":1,"message":"156","line":142,"column":33,"nodeType":"137","endLine":142,"endColumn":37},{"ruleId":"155","severity":1,"message":"156","line":158,"column":33,"nodeType":"137","endLine":158,"endColumn":37},{"ruleId":"155","severity":1,"message":"156","line":168,"column":33,"nodeType":"137","endLine":168,"endColumn":37},{"ruleId":"155","severity":1,"message":"156","line":184,"column":33,"nodeType":"137","endLine":184,"endColumn":37},{"ruleId":"155","severity":1,"message":"156","line":200,"column":33,"nodeType":"137","endLine":200,"endColumn":37},"no-native-reassign",["163"],"no-negated-in-lhs",["164"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'react' is defined but never used.","'NavItem' is defined but never used.","'Brand' is defined but never used.","'NavDropdown' is defined but never used.","'FormControl' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Navbar' is defined but never used.","'Nav' is defined but never used.","'Button' is defined but never used.","'Form' is defined but never used.",["163"],["164"],"'Session' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'Check'. Either include it or remove the dependency array.","ArrayExpression",["165"],"React Hook React.useEffect has a missing dependency: 'Data'. Either include it or remove the dependency array.",["166"],"jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","React Hook React.useEffect has a missing dependency: 'getName'. Either include it or remove the dependency array.",["167"],"React Hook React.useEffect has a missing dependency: 'fetchTodoTask'. Either include it or remove the dependency array.",["168"],"React Hook React.useEffect has a missing dependency: 'fetchDoneTask'. Either include it or remove the dependency array.",["169"],"no-global-assign","no-unsafe-negation",{"desc":"170","fix":"171"},{"desc":"172","fix":"173"},{"desc":"174","fix":"175"},{"desc":"176","fix":"177"},{"desc":"178","fix":"179"},"Update the dependencies array to be: [Check]",{"range":"180","text":"181"},"Update the dependencies array to be: [Data]",{"range":"182","text":"183"},"Update the dependencies array to be: [getName]",{"range":"184","text":"185"},"Update the dependencies array to be: [fetchTodoTask]",{"range":"186","text":"187"},"Update the dependencies array to be: [fetchDoneTask]",{"range":"188","text":"189"},[1166,1168],"[Check]",[782,784],"[Data]",[546,548],"[getName]",[1173,1175],"[fetchTodoTask]",[1156,1158],"[fetchDoneTask]"]