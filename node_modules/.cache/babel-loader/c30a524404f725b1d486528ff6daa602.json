{"ast":null,"code":"var _jsxFileName = \"E:\\\\my-web\\\\my-web-front\\\\myreact\\\\src\\\\components\\\\beforeLogin.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Login from \"./Login\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport Access from \"./access\";\nimport BeforeSignIn from \"./beforeSignIn\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BeforeLogin = () => {\n  _s();\n\n  const [Session, setSession] = useState({\n    isLoggedin: false,\n    currentUser: null,\n    errorMessage: null\n  });\n  const TokenLocal = localStorage.getItem(\"token\");\n\n  function Check() {\n    if (TokenLocal == null) {\n      console.log(\"null\");\n    } else {\n      axios.post(`http://localhost:1000/api/check?token=${TokenLocal}`).then(res => {\n        if (res.data == true) {\n          setSession({\n            isLoggedin: true\n          });\n        } else {\n          setSession({\n            isLoggedin: false\n          });\n        }\n      });\n    }\n  }\n\n  React.useEffect(() => {\n    Check();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: Session.isLoggedin ? /*#__PURE__*/_jsxDEV(Access, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(Router, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/\",\n        component: () => /*#__PURE__*/_jsxDEV(Login, {\n          setSession: setSession\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 55\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/signIn\",\n        component: () => /*#__PURE__*/_jsxDEV(BeforeSignIn, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 55\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/todo\",\n        component: () => /*#__PURE__*/_jsxDEV(Login, {\n          setSession: setSession\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 53\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/done\",\n        component: () => /*#__PURE__*/_jsxDEV(Login, {\n          setSession: setSession\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 53\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/create\",\n        component: () => /*#__PURE__*/_jsxDEV(Login, {\n          setSession: setSession\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 55\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/Profile\",\n        component: () => /*#__PURE__*/_jsxDEV(Login, {\n          setSession: setSession\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 56\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BeforeLogin, \"mrbywbtn8JVG2yBvbWwMZqGO20Y=\");\n\n_c = BeforeLogin;\nexport default BeforeLogin;\n\nvar _c;\n\n$RefreshReg$(_c, \"BeforeLogin\");","map":{"version":3,"sources":["E:/my-web/my-web-front/myreact/src/components/beforeLogin.js"],"names":["React","Login","BrowserRouter","Router","Route","useEffect","useState","axios","Access","BeforeSignIn","BeforeLogin","Session","setSession","isLoggedin","currentUser","errorMessage","TokenLocal","localStorage","getItem","Check","console","log","post","then","res","data"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport Login from  \"./Login\"\r\nimport { BrowserRouter as Router, Route} from \"react-router-dom\";\r\nimport { useEffect, useState } from 'react';\r\nimport axios from 'axios'\r\nimport Access from \"./access\"\r\nimport BeforeSignIn from \"./beforeSignIn\"\r\n\r\n\r\nconst BeforeLogin = ()=>{\r\n    \r\n  const [Session,setSession] = useState({\r\n    isLoggedin : false ,\r\n    currentUser : null,\r\n    errorMessage : null\r\n  });\r\n\r\n  const TokenLocal = localStorage.getItem(\"token\")\r\n\r\n  function  Check(){\r\n    if(TokenLocal==null)\r\n    {\r\n      console.log(\"null\")\r\n    }\r\n    else{\r\n      axios\r\n      .post(`http://localhost:1000/api/check?token=${TokenLocal}`)\r\n      .then((res)=>{\r\n         if(res.data==true)\r\n         {\r\n           setSession ({\r\n             isLoggedin : true\r\n           })\r\n         }\r\n         else{\r\n          setSession ({\r\n            isLoggedin : false\r\n          })\r\n         }\r\n      })\r\n    }\r\n\r\n  }\r\n\r\n  React.useEffect(()=>{\r\n    Check();\r\n  }, []);\r\n\r\n  \r\n  return (\r\n    <div>\r\n       \r\n       {\r\n        Session.isLoggedin ? \r\n        (\r\n          <Access />\r\n        )  \r\n        : \r\n        (\r\n          <Router>\r\n              <Route exact path=\"/\" component={() =>  <Login setSession={setSession}/>} />\r\n              <Route path=\"/signIn\" component={() =>  <BeforeSignIn />}/>\r\n              <Route path=\"/todo\" component={() =>  <Login setSession={setSession}/>}/>\r\n              <Route path=\"/done\" component={() =>  <Login setSession={setSession}/>}/>\r\n              <Route path=\"/create\" component={() =>  <Login setSession={setSession}/>}/>\r\n              <Route path=\"/Profile\" component={() =>  <Login setSession={setSession}/>}/>\r\n          </Router>\r\n        )\r\n      }\r\n    </div>\r\n   \r\n  );  \r\n\r\n}\r\nexport default BeforeLogin;"]},"metadata":{},"sourceType":"module"}