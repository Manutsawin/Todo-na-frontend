{"ast":null,"code":"var _jsxFileName = \"E:\\\\my-web\\\\my-web-front\\\\myreact\\\\src\\\\App.js\";\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport ComponentLogined from \"./components/componentLogined\";\nimport BeforeLogin from \"./components/beforeLogin\";\nimport Login from \"./components/Login\";\nimport { Navbar, Nav, NavItem, Brand, Button, NavDropdown, Form, FormControl } from 'react-bootstrap';\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport { useEffect, useState } from 'react';\nimport Home from \"./components/pages/Home\";\nimport Component from \"./components/component\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: \"/logined\",\n      component: () => /*#__PURE__*/_jsxDEV(BeforeLogin, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 58\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/logined/task\",\n      component: TaskLogined\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this); // const [Session,setSession] = useState({\n  //   isLoggedin : false ,\n  //   currentUser : null,\n  //   errorMessage : null\n  // });\n  // return (\n  //   <div>\n  //      {\n  //       Session.isLoggedin ? \n  //       (\n  //         <Component />\n  //       )  \n  //       : \n  //       (\n  //         <Login setSession={setSession}/> \n  //       )\n  //     }\n  //   </div>\n  // );  \n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["E:/my-web/my-web-front/myreact/src/App.js"],"names":["ComponentLogined","BeforeLogin","Login","Navbar","Nav","NavItem","Brand","Button","NavDropdown","Form","FormControl","BrowserRouter","Router","Switch","Route","Link","useEffect","useState","Home","Component","App","TaskLogined"],"mappings":";;AACA,OAAO,WAAP;AACA,OAAOA,gBAAP,MAA6B,+BAA7B;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,KAAP,MAAmB,oBAAnB;AACA,SAAQC,MAAR,EAAgBC,GAAhB,EAAqBC,OAArB,EAA6BC,KAA7B,EAAmCC,MAAnC,EAA0CC,WAA1C,EAAsDC,IAAtD,EAA2DC,WAA3D,QAA6E,iBAA7E;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,MAAlC,EAA0CC,KAA1C,EAAiDC,IAAjD,QAA4D,kBAA5D;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,IAAP,MAAiB,yBAAjB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;;;AAGA,SAASC,GAAT,GAAe;AAEb,sBACE,QACE,MADF;AAAA,4BAEM,QAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,UAAlB;AAA6B,MAAA,SAAS,EAAE,mBAAO,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAA/C;AAAA;AAAA;AAAA;AAAA,YAFN,eAKM,QAAC,KAAD;AAAO,MAAA,IAAI,EAAC,eAAZ;AAA4B,MAAA,SAAS,EAAEC;AAAvC;AAAA;AAAA;AAAA;AAAA,YALN;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CAFa,CAgBb;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAID;;KAxCQD,G;AA0CT,eAAeA,GAAf","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport ComponentLogined from \"./components/componentLogined\" \nimport BeforeLogin from \"./components/beforeLogin\"\nimport Login from  \"./components/Login\"\nimport {Navbar, Nav, NavItem,Brand,Button,NavDropdown,Form,FormControl} from 'react-bootstrap';\nimport { BrowserRouter as Router, Switch, Route ,Link} from \"react-router-dom\";\nimport { useEffect, useState } from 'react';\nimport Home from \"./components/pages/Home\" \nimport Component from \"./components/component\"\n\n\nfunction App() {\n  \n  return (\n    <\n      Router>\n          <Route exact path=\"/logined\" component={() =>  <BeforeLogin/>} />\n          \n        \n          <Route path=\"/logined/task\" component={TaskLogined}/>\n     </Router>\n    \n    );     \n    \n  \n  \n    \n  // const [Session,setSession] = useState({\n  //   isLoggedin : false ,\n  //   currentUser : null,\n  //   errorMessage : null\n  // });\n\n  // return (\n  //   <div>\n  //      {\n  //       Session.isLoggedin ? \n  //       (\n  //         <Component />\n  //       )  \n  //       : \n  //       (\n  //         <Login setSession={setSession}/> \n  //       )\n  //     }\n  //   </div>\n   \n  // );  \n\n\n    \n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}